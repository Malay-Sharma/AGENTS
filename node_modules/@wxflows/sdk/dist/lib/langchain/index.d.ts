import wxflows_main, { type WxflowsProps } from '../wxflows.js';
import { type DynamicStructuredTool } from '@langchain/core/tools';
import { type z } from 'zod';
type IncomingToolCall = {
    name: string;
    args: {
        query?: string;
        [key: string]: any;
    };
    id: string;
};
declare class wxflows extends wxflows_main {
    _lcCoreToolsModule: Promise<typeof import('@langchain/core/tools')>;
    _lcCoreMessagesModule: Promise<typeof import('@langchain/core/messages')>;
    _zodModule: Promise<typeof import('zod')>;
    constructor({ endpoint, apikey }: WxflowsProps);
    get lcTools(): Promise<DynamicStructuredTool<z.ZodObject<{
        [key: string]: any;
        query?: z.ZodString | undefined;
    }, "strip", z.ZodTypeAny, {
        [key: string]: any;
        query?: string | undefined;
    }, {
        [key: string]: any;
        query?: string | undefined;
    }>>[]>;
    invokeTool: ({ name, args, id }: IncomingToolCall) => Promise<import("@langchain/core/messages").ToolMessage | undefined>;
}
export default wxflows;
//# sourceMappingURL=index.d.ts.map