import wxflows_main, { type WxflowsProps } from '../wxflows.js';
type Input = {
    result: {
        choices: Choices;
    };
};
type Choice = {
    index: number;
    message: {
        role: 'assistant';
        content?: string;
        tool_calls?: ToolCall[];
    };
    finish_reason: 'stop' | 'continue' | 'error' | string;
};
export type ToolCall = {
    id: string;
    type: 'function' | string;
    operation: {
        query?: string;
        [key: string]: any;
    };
    function: {
        name: string;
        arguments: string;
    };
};
export type ToolResponse = {
    role: string;
    tool_call_id: string;
    content?: string;
};
type Choices = Choice[];
declare class wxflows extends wxflows_main {
    constructor({ endpoint, apikey }: WxflowsProps);
    executeTools: (input: Input) => Promise<(ToolResponse | {
        content: string;
        role: "assistant";
        tool_calls?: ToolCall[] | undefined;
    })[] | undefined>;
}
export default wxflows;
//# sourceMappingURL=index.d.ts.map