// Copyright IBM Corp. 2023, 2024
import wxflows_main from '../wxflows.js';
class wxflows extends wxflows_main {
    constructor({ endpoint, apikey }) {
        super({ endpoint, apikey });
        this.executeTools = async (input) => {
            const { choices } = input?.result;
            if (choices?.length > 0) {
                const tool_calls = choices
                    .filter((choice) => choice?.finish_reason === 'tool_calls' &&
                    choice?.message?.tool_calls?.length &&
                    choice?.message?.tool_calls?.length > 0)
                    .map((choice) => choice.message.tool_calls)
                    .flat();
                const toolCalls = tool_calls.filter((tool_call) => tool_call?.function?.arguments);
                const responses = await Promise.all(toolCalls.map(async (toolCall) => {
                    const toolResponse = {
                        role: 'tool',
                        tool_call_id: toolCall.id,
                    };
                    try {
                        const toolArguments = JSON.parse(toolCall.function.arguments);
                        const data = await this.execTool(toolCall.function.name, toolArguments);
                        toolResponse.content = JSON.stringify(data) || '';
                    }
                    catch (e) {
                        toolResponse.content = '';
                    }
                    return toolResponse;
                }));
                const inputMessages = choices.map((choice) => ({
                    ...choice.message,
                    content: choice.message.content || '',
                }));
                return [...inputMessages, ...responses];
            }
        };
    }
}
export default wxflows;
//# sourceMappingURL=index.js.map